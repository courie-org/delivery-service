apiVersion: 1.0.0
metadata:
  name: delivery-service
projects:
  - name: delivery-service
    source:
      location: 'https://github.com/courie-org/delivery-service'
      type: git
      branch: master
components:
  - alias: zookeeper
    type: dockerimage
    image: 'strimzi/kafka:0.11.3-kafka-2.1.0'
    command:
      - sh
      - '-c'
      - bin/zookeeper-server-start.sh config/zookeeper.properties
    env:
      - value: /tmp/logs
        name: LOG_DIR
    endpoints:
      - attributes:
          discoverable: 'true'
          public: 'false'
        name: zookeeper
        port: 2181
    memoryLimit: 512Mi
  - alias: redis
    type: dockerimage
    image: redis
    endpoints:
      - attributes:
          discoverable: 'true'
          public: 'false'
        name: redis
        port: 6379
    memoryLimit: 256Mi
  - alias: delivery-service
    type: dockerimage
    image: 'registry.redhat.io/codeready-workspaces/plugin-java11-rhel8:latest'
    env:
      - value: '-XX:MaxRAMPercentage=50.0 -XX:+UseParallelGC -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=20 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xms20m -Djava.security.egd=file:/dev/./urandom -Duser.home=/home/jboss'
        name: JAVA_OPTS
      - value: $(JAVA_OPTS)
        name: MAVEN_OPTS
      - value: 'kafka:9092'
        name: BOOTSTRAP_SERVERS
      - value: 'redis:6379'
        name: REDIS_SERVER
    endpoints:
      - name: dev-server
        port: 9098
      - attributes:
          path: /deliveries
        name: deliveries-endpoint
        port: 9098
    memoryLimit: 512Mi
    mountSources: true
    volumes:
      - name: m2
        containerPath: /home/jboss/.m2
  - alias: kafka
    type: dockerimage
    image: 'strimzi/kafka:0.11.3-kafka-2.1.0'
    command:
      - sh
      - '-c'
      - 'sleep 30 && bin/kafka-server-start.sh config/server.properties --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}'
    env:
      - value: /tmp/logs
        name: LOG_DIR
      - value: 'PLAINTEXT://localhost:9092'
        name: KAFKA_ADVERTISED_LISTENERS
      - value: 'PLAINTEXT://0.0.0.0:9092'
        name: KAFKA_LISTENERS
      - value: 'zookeeper:2181'
        name: KAFKA_ZOOKEEPER_CONNECT
    endpoints:
      - attributes:
          discoverable: 'true'
          public: 'false'
        name: kafka
        port: 9092
    memoryLimit: 512Mi
  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
    alias: vscode-openshift
  - id: redhat/quarkus-java11/latest
    type: chePlugin
commands:
  - name: 1. Package delivery-service
    actions:
      - workdir: /projects/delivery-service/
        type: exec
        command: mvn package
        component: delivery-service
  - name: 2. start delivery-service in devmode
    actions:
      - workdir: /projects/delivery-service/
        type: exec
        command: 'mvn compile quarkus:dev'
        component: delivery-service
  - name: Attach remote debugger
    actions:
      - referenceContent: |
          {
            "version": "0.2.0",
            "configurations": [
              {
                "type": "java",
                "request": "attach",
                "name": "Attach to Remote Quarkus App",
                "hostName": "localhost",
                "port": 5005
              }
            ]
          }
        type: vscode-launch
